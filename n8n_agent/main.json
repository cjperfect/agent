{
  "name": "main",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=用户发送消息: {{$json.chatInput}}\n上传文件的数据: {{ $json.content }}\n\n如果用户提供了文件, 请通过数据{{ $json.content }}进行分析统计，并给出建议，尽量给出配套的图表\n如果用户发送了消息{{$json.chatInput}}，就需要根据用户的需求进行回复。\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# 🎓 角色定位：资深数据分析专家\n\n你是一位经验丰富、技术精湛的 **数据分析专家**，专精于 Excel 数据的解析、可视化与业务洞察。你擅长从纷繁复杂的数据中提炼出核心价值，不仅能输出清晰、全面的分析报告，还能给出具备实操性的建议，助力业务高效决策。\n\n---\n\n## 🧠 核心技能\n\n### 🔍 技能 1：Excel 文件分析能力\n\n当用户上传 Excel 文件时，你将：\n\n1. **精确读取并解析**各个工作表的数据，识别字段、数据类型与结构；\n2. 对数据进行多维度分析，包括但不限于：\n   - 数据分布与集中趋势（平均值、中位数、极值等）\n   - 异常值识别与处理建议\n   - 时间序列趋势变化\n   - 指标间相关性与聚类特征\n   - 类别变量统计与排名\n3. 输出结构严谨的总结报告，包含：\n   - 数据特征与关键指标\n   - 显著发现与潜在风险\n   - 潜在业务机会\n4. 提出具备**可执行性**与**业务价值**的策略建议；\n5. 分析的结果包含所有数据, 不能遗漏\n\n---\n\n### 🛠 技能 2：深度定制化分析\n\n当用户提出具体分析需求或对初始结果不满意时，你将：\n\n1. 快速理解并精准匹配用户意图；\n2. 重新制定分析策略并更新图表展示逻辑；\n3. 支持进阶分析需求，如：\n   - 预测建模（如趋势预测、回归分析）\n   - 多维交叉分析（如某变量在不同维度下的对比）\n   - 自动生成摘要与洞察提示\n   - 图表类型的动态切换与组合（如多维柱状 + 折线混合图）\n\n---\n\n\n## 📈 分析输出结构\n\n每次分析结果应包含以下内容：\n\n### ✅ 1. 总结\n\n**总结**：简洁明确地描述数据特征、指标表现、趋势规律与核心发现。\n\n示例：\n\n> 在过去 6 个月中，销售额持续增长，月均增长率为 12.6%。其中 5 月增长最显著，环比提升 32%。地区维度上，华东地区销售占比达 42%，为主要增长动力。\n\n---\n\n### ✅ 2. 建议\n\n**建议**：结合数据现象提出具有业务价值的建议，内容务实可执行。\n\n示例：\n\n> 建议对华东地区加大资源投放，复制 5 月的营销策略以提升 Q4 业绩；针对退货率偏高的区域，可提升售后体验及产品说明优化。\n\n---\n\n\n## 最终输出结果\n\n请严格按照以下格式返回分析结果：\n\n返回一个 JSON 对象，包含以下两个字段：\n\n1. output：一个 Markdown 格式的字符串，包含清晰、有层次的总结与建议，重点突出业务洞察，禁止包含 JSON、代码块标记、额外说明, 标题前面要有icon更容易辨识, 整体界面要美观可以通过添加icon；\n2. echartsOption：一个数组，表示多个图表。每个图表包含两个字段：\n  - summary：简洁描述图表内容；\n  - option：标准的 Echarts.js 配置对象, 所有配置都要搭配得当, 不能出现元素重叠的情况。\n\n⚠️ 输出必须是纯 JSON，禁止任何 Markdown 包裹符、注释、代码块符号（如 ```json），否则系统会报错。\n⚠️ JSON 须符合以下结构要求，缺失字段会导致输出失败：\n\n{\n  \"content\": \"...Markdown内容...\",\n  \"echartsOption\": [\n    {\n      \"summary\": \"图表简介\",\n      \"option\": { /* Echarts 配置对象 */ }\n    },\n    ...\n  ]\n}\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        384,
        368
      ],
      "id": "a3dabd57-f4d5-47ea-ac24-349d610bd854",
      "name": "AI Agent",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"code\": 200,\n  \"result\": {{ JSON.stringify($json.output) }}\n} ",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        816,
        368
      ],
      "id": "0a024b57-9463-4c6f-9955-e9829b126584",
      "name": "Respond to Webhook",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "xlsx",
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -320,
        0
      ],
      "id": "c3b99d8a-f987-497a-a268-2f6b63d983cb",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.files[0].fileExtension }}",
                    "rightValue": "xlsx",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "d9225ef2-fdc0-4579-8d2b-d3b3bf4a6bf3"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "961217af-1409-406b-9e33-c899c73eb03a",
                    "leftValue": "=",
                    "rightValue": "xls",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "24ac4199-2813-4948-b4dc-458e84b0d802",
                    "leftValue": "=",
                    "rightValue": "csv",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -544,
        176
      ],
      "id": "8a4f7595-2e0e-47b2-94d6-5764dd72200f",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "xls",
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -320,
        192
      ],
      "id": "bfd4a53b-9048-4d9b-8236-dd48e6c54aae",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -320,
        384
      ],
      "id": "20afcf7b-69c3-4a31-acb1-8b38a499a118",
      "name": "Extract from File2"
    },
    {
      "parameters": {
        "jsCode": "const data = [];\nfor (const item of $input.all()) {\n  data.push(item.json);\n}\nreturn [\n  {\n    content: JSON.stringify(data),\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        128,
        192
      ],
      "id": "b8924a69-1d93-4750-a15c-bd70a2dfcfaa",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6514818f-7807-4e47-8801-bfdabeae996e",
              "leftValue": "={{ $json.files[0].fileName }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -768,
        368
      ],
      "id": "c335bab6-3b50-4e0c-90a7-3b6b91464dc6",
      "name": "If"
    },
    {
      "parameters": {
        "public": true,
        "options": {
          "allowedOrigins": "*",
          "allowFileUploads": true,
          "allowedFilesMimeTypes": ".xlsx, .xls, .csv",
          "responseMode": "responseNode"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -992,
        368
      ],
      "id": "4a6dfee1-d96e-4c78-8ea1-994172392b9f",
      "name": "When chat message received",
      "webhookId": "b98afb4f-8822-4b65-8634-fdd550dd46b0"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When chat message received').first().json.sessionId }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        480,
        592
      ],
      "id": "18e21a36-28da-4b44-bd1b-ae60ca943964",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        352,
        592
      ],
      "id": "79ef2a2a-9909-4826-8206-f08e63f503ac",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "FveV4JWc43VxZrn3",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "include": "except",
        "excludeFields": "id",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -96,
        192
      ],
      "id": "e91a9739-69e6-4f41-a12f-538bf34e07b6",
      "name": "排除一些无用字段"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"content\": {\n      \"type\": \"string\",\n      \"description\": \"数据分析总结与建议，Markdown 格式\"\n    },\n    \"echartsOption\": {\n      \"type\": \"array\",\n      \"description\": \"图表配置列表，可包含多个图表\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"图表的简要描述\"\n          },\n          \"option\": {\n            \"type\": \"object\",\n            \"description\": \"符合 Echarts.js 的图表配置\"\n          }\n        },\n        \"required\": [\"summary\", \"option\"]\n      }\n    }\n  },\n  \"required\": [\"output\", \"echartsOption\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        608,
        592
      ],
      "id": "b7b0d6f1-9c6f-4d73-9a30-d52b165ced4c",
      "name": "Structured Output Parser1"
    }
  ],
  "pinData": {},
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "排除一些无用字段",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "排除一些无用字段",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "排除一些无用字段",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "排除一些无用字段": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3a3a0778-5c5c-4a3a-891c-52e81ec48d6f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d8ae7ad22b1c354fe97e82fd863f57343081e47461563dc2ec5d3f89a7b83371"
  },
  "id": "YX8umD5DibM5L5zU",
  "tags": []
}