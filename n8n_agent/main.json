{
  "name": "main",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=用户发送消息: {{$json.chatInput}}\n上传文件的数据: {{ $json.content }}\n\n如果用户提供了文件, 请通过数据{{ $json.content }}进行分析统计，并给出建议，尽量给出配套的图表\n如果用户发送了消息{{$json.chatInput}}，就需要根据用户的需求进行回复。\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# 🎓 角色定位：资深数据分析专家\n\n你是一位经验丰富、技术精湛的 **数据分析专家**，专精于 Excel 数据的解析、可视化与业务洞察。你擅长从纷繁复杂的数据中提炼出核心价值，不仅能输出清晰、全面的分析报告，还能给出具备实操性的建议，助力业务高效决策。\n\n---\n\n## 🧠 核心技能\n\n### 🔍 技能 1：Excel 文件分析能力\n\n当用户上传 Excel 文件时，你将：\n\n1. **精确读取并解析**各个工作表的数据，识别字段、数据类型与结构；\n2. 对数据进行多维度分析，包括但不限于：\n   - 数据分布与集中趋势（平均值、中位数、极值等）\n   - 异常值识别与处理建议\n   - 时间序列趋势变化\n   - 指标间相关性与聚类特征\n   - 类别变量统计与排名\n3. 输出结构严谨的总结报告，包含：\n   - 数据特征与关键指标\n   - 显著发现与潜在风险\n   - 潜在业务机会\n4. 提出具备**可执行性**与**业务价值**的策略建议；\n5. 分析的结果包含所有数据, 不能遗漏\n\n---\n\n### 🛠 技能 2：深度定制化分析\n\n当用户提出具体分析需求或对初始结果不满意时，你将：\n\n1. 快速理解并精准匹配用户意图；\n2. 重新制定分析策略并更新图表展示逻辑；\n3. 支持进阶分析需求，如：\n   - 预测建模（如趋势预测、回归分析）\n   - 多维交叉分析（如某变量在不同维度下的对比）\n   - 自动生成摘要与洞察提示\n   - 图表类型的动态切换与组合（如多维柱状 + 折线混合图）\n4. 如果用户需要生成Excel的话，可以将这些分析结果和总结的内容，也可以插入到表格中\n---\n\n### 🛠 技能 3：Excel文件生成\n如果用户需要生成excel文件, 先通过listTools获取工具列表, 再根据需求选择对应的工具, 最后使用executeTool执行所选工具并提供相应参数\n- 使用excelMcp工具处理Excel\n- 写入内容需包含：\n    - 原始数据\n    - **分析结果**（如总分、平均分、排名、建议等），这个很重要\n- 文件绝对路径: C:\\Users\\ChenJiang\\Desktop\\agent\\data\n- 文件名格式: 分析内容+时间戳\n- 提供文件下载链接: 下载链接http://192.168.0.106:5173/data/分析内容+时间戳.xlsx\n\n## 📈 分析输出结构\n\n每次分析结果应包含以下内容：\n\n### ✅ 1. 总结\n\n**总结**：简洁明确地描述数据特征、指标表现、趋势规律与核心发现。\n\n示例：\n\n> 在过去 6 个月中，销售额持续增长，月均增长率为 12.6%。其中 5 月增长最显著，环比提升 32%。地区维度上，华东地区销售占比达 42%，为主要增长动力。\n\n---\n\n### 📌 2. 建议\n\n**建议**：结合数据现象提出具有业务价值的建议，内容务实可执行。\n\n示例：\n\n> 建议对华东地区加大资源投放，复制 5 月的营销策略以提升 Q4 业绩；针对退货率偏高的区域，可提升售后体验及产品说明优化。\n\n---\n\n\n## 最终输出结果\n\n请严格按照以下格式返回分析结果：\n\n返回一个 JSON 对象，包含以下三个字段：\n\n1. content：一个 Markdown 格式的字符串，包含清晰、有层次的总结与建议，重点突出业务洞察，禁止包含 JSON、代码块标记、额外说明, 标题前面要有icon更容易辨识, 整体界面要美观可以通过添加icon；\n2. echartsOption：一个数组，表示多个图表。每个图表包含两个字段：\n  - summary：简洁描述图表内容；\n  - option：标准的 Echarts.js 配置对象, 所有配置都要搭配得当, 不能出现元素重叠的情况。\n3. fileLink: 文件下载链接\n\n⚠️ 输出必须是纯 JSON，禁止任何 Markdown 包裹符、注释、代码块符号（如 ```json），否则系统会报错。\n⚠️ JSON 须符合以下结构要求，缺失字段会导致输出失败：\n\n{\n  \"content\": \"...Markdown内容...\",\n  \"echartsOption\": [\n    {\n      \"summary\": \"图表简介\",\n      \"option\": { /* Echarts 配置对象 */ }\n    },\n    ...\n  ],\n  \"fileLink\": 'http://192.168.0.106:5173/data/aaa.xlsx'\n}\n\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        832,
        368
      ],
      "id": "a629c422-cfee-4734-97b5-83b315a71643",
      "name": "AI Agent",
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"code\": 200,\n  \"result\": {{ JSON.stringify($json.output) }}\n} ",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1392,
        368
      ],
      "id": "02c81669-9cde-4602-8aa4-fd79ce7b2843",
      "name": "Respond to Webhook",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "xlsx",
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "2519242c-aade-48a6-bde7-c612fe231f18",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.files[0].fileExtension }}",
                    "rightValue": "xlsx",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "d9225ef2-fdc0-4579-8d2b-d3b3bf4a6bf3"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "961217af-1409-406b-9e33-c899c73eb03a",
                    "leftValue": "=",
                    "rightValue": "xls",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "24ac4199-2813-4948-b4dc-458e84b0d802",
                    "leftValue": "=",
                    "rightValue": "csv",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -224,
        176
      ],
      "id": "4243d9de-489b-4ee2-91d4-8506c11157b2",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "xls",
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        192
      ],
      "id": "234d206e-128c-4950-b367-4f0a54b8316f",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "binaryPropertyName": "data0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        384
      ],
      "id": "e1c8dcca-145c-4306-9d46-fd6f654f06e1",
      "name": "Extract from File2"
    },
    {
      "parameters": {
        "jsCode": "const data = [];\nfor (const item of $input.all()) {\n  data.push(item.json);\n}\nreturn [\n  {\n    content: JSON.stringify(data),\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        448,
        192
      ],
      "id": "24cd853e-0ce8-42b6-9e25-410eb877816d",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6514818f-7807-4e47-8801-bfdabeae996e",
              "leftValue": "={{ $json.files[0].fileName }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -448,
        368
      ],
      "id": "faa25f9f-d45b-4eb1-a2ac-c1c7650b4b7b",
      "name": "If"
    },
    {
      "parameters": {
        "public": true,
        "options": {
          "allowedOrigins": "*",
          "allowFileUploads": true,
          "allowedFilesMimeTypes": ".xlsx, .xls, .csv",
          "responseMode": "responseNode"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -672,
        368
      ],
      "id": "0d7e4336-bdc5-42a0-9c23-ad409cfe6d90",
      "name": "When chat message received",
      "webhookId": "b98afb4f-8822-4b65-8634-fdd550dd46b0"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When chat message received').first().json.sessionId }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        800,
        592
      ],
      "id": "475047e4-eff2-4e04-a1f9-da629ca8abbc",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        672,
        592
      ],
      "id": "74541764-e76c-4e0f-8657-07f9317c7fb6",
      "name": "DeepSeek Chat Model",
      "credentials": {
        "deepSeekApi": {
          "id": "jxMoHUoFgst2wkLf",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"content\": {\n      \"type\": \"string\",\n      \"description\": \"数据分析总结与建议，Markdown 格式\"\n    },\n    \"echartsOption\": {\n      \"type\": \"array\",\n      \"description\": \"图表配置列表，可包含多个图表\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"summary\": {\n            \"type\": \"string\",\n            \"description\": \"图表的简要描述\"\n          },\n          \"option\": {\n            \"type\": \"object\",\n            \"description\": \"符合 Echarts.js 的图表配置\"\n          }\n        },\n        \"required\": [\"summary\", \"option\"]\n      }\n    },\n    \"fileLink\": {\n      \"type\": \"string\",\n      \"description\": \"文件下载链接\"\n    }\n  },\n  \"required\": [\"content\", \"echartsOption\"]\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1184,
        592
      ],
      "id": "1247c763-6704-44f2-9bd4-fa98dae71f00",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatDeepSeek",
      "typeVersion": 1,
      "position": [
        -448,
        1024
      ],
      "id": "50f7da83-a298-4705-9d5c-889489d13227",
      "name": "DeepSeek Chat Model1",
      "credentials": {
        "deepSeekApi": {
          "id": "jxMoHUoFgst2wkLf",
          "name": "DeepSeek account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -672,
        800
      ],
      "id": "19c7434c-7c7b-4edb-b865-95fb9ddab835",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"QuickChart Configuration\",\n  \"type\": \"object\",\n  \"required\": [\"type\", \"data\"],\n  \"properties\": {\n    \"type\": {\n      \"type\": \"string\",\n      \"description\": \"Chart type, e.g., bar, line, pie, radar, etc.\",\n      \"enum\": [\"bar\", \"line\", \"pie\", \"doughnut\", \"radar\", \"polarArea\"]\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"required\": [\"labels\", \"datasets\"],\n      \"properties\": {\n        \"labels\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"description\": \"Labels for the X-axis or segments\"\n        },\n        \"datasets\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"type\": \"object\",\n            \"required\": [\"label\", \"data\"],\n            \"properties\": {\n              \"label\": {\n                \"type\": \"string\",\n                \"description\": \"Label for the dataset\"\n              },\n              \"data\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"number\"\n                },\n                \"description\": \"Data points\"\n              },\n              \"backgroundColor\": {\n                \"type\": [\"string\", \"array\"],\n                \"description\": \"Background color(s)\"\n              },\n              \"borderColor\": {\n                \"type\": [\"string\", \"array\"],\n                \"description\": \"Border color(s)\"\n              },\n              \"fill\": {\n                \"type\": [\"boolean\", \"string\"],\n                \"description\": \"Whether to fill under the line (for line chart)\"\n              },\n              \"tension\": {\n                \"type\": \"number\",\n                \"description\": \"Line tension (for line chart, 0 = straight lines)\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"options\": {\n      \"type\": \"object\",\n      \"description\": \"Chart display options\",\n      \"properties\": {\n        \"title\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"display\": { \"type\": \"boolean\" },\n            \"text\": { \"type\": \"string\" }\n          }\n        },\n        \"scales\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"x\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"title\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"display\": { \"type\": \"boolean\" },\n                    \"text\": { \"type\": \"string\" }\n                  }\n                }\n              }\n            },\n            \"y\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"title\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"display\": { \"type\": \"boolean\" },\n                    \"text\": { \"type\": \"string\" }\n                  }\n                },\n                \"beginAtZero\": { \"type\": \"boolean\" }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -192,
        1024
      ],
      "id": "470e0881-0177-4588-a51f-de97622611bb",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "content": "## 这是生成图表的工作流\n### 目前已优化，多个大模型的调用存在速度缓慢问题，目前采用第一个大模型生成图表配置，交给前端去渲染，减少token消费以及速度的提升",
        "height": 608,
        "width": 1376
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1088,
        560
      ],
      "typeVersion": 1,
      "id": "105e3f0b-a303-4a17-9fa0-1de247f19cbe",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "include": "except",
        "excludeFields": "id",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        192
      ],
      "id": "f284435a-d309-49e1-9f4f-d2d383be7a92",
      "name": "exclude Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=输入的数据: {{ $json.query }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=### 角色设定\n你是一位 Chart.js 可视化专家。你的主要任务是根据用户的请求，生成**有效、结构清晰、标签明确**的Chart.js 配置对象。这些配置应当可以直接用于 Chart.js 的构造函数'new Chart()'中。\n\n### 输入要求\n你将接收到用户关于图表的描述，请根据以下要素解析和响应:\n\n####1、图表类型\n用户可能会指定图表类型，如:`bar`(柱状图)、`line`(折线图)、`pie`(饼图)、`scatter`(散点图)radar`、`bubble、等。\n\n####2.数据\n用户提供的数据可能为 CSV、JSON、列表或自然语言形式。\n*对格式不清晰的数据，要主动提问澄清。\n*如有需要，可提取和转换数据结构。\n\n#### 3.标签信息\n用户应提供用于坐标轴、数据点等元素的标签，特别是:\n***轴标题**(如:\"月份\"，\"销售额(USD)\")\n***单位**(如:\"(kg)\"，\"(USD)\")\n***数据类型**(分类、数值型、时间序列)\n如信息缺失，请主动向用户确认。\n\n### 输出要求\n输出的结果一定是完整的，能够被使用，不能出现图片加载不出来的情况\n![图表说明](图表URL)"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -416,
        800
      ],
      "id": "27c8c480-30f4-4375-b820-6014bf905df8",
      "name": "echart generate"
    },
    {
      "parameters": {
        "chartOptions": {},
        "datasetOptions": {}
      },
      "type": "n8n-nodes-base.quickChartTool",
      "typeVersion": 1,
      "position": [
        -320,
        1024
      ],
      "id": "92b632e2-1169-40f4-b07c-5f46ce754e2a",
      "name": "QuickChart MCP"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        928,
        592
      ],
      "id": "81b8da6b-b4d3-45fd-9a45-9d2f308b8281",
      "name": "excelMcp tool",
      "credentials": {
        "mcpClientApi": {
          "id": "KPqGl8bfuP7VzRsu",
          "name": "MCP Client (STDIO) account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeTool",
        "toolName": "={{ $fromAI('toolname') }}",
        "toolParameters": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Tool_Parameters', ``, 'json') }}"
      },
      "type": "n8n-nodes-mcp.mcpClientTool",
      "typeVersion": 1,
      "position": [
        1056,
        592
      ],
      "id": "14c9948d-7816-4930-9b45-36ba34304443",
      "name": "excelMcp execute",
      "credentials": {
        "mcpClientApi": {
          "id": "KPqGl8bfuP7VzRsu",
          "name": "MCP Client (STDIO) account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "exclude Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "exclude Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File2": {
      "main": [
        [
          {
            "node": "exclude Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "DeepSeek Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "echart generate",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "echart generate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "echart generate",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "exclude Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QuickChart MCP": {
      "ai_tool": [
        [
          {
            "node": "echart generate",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "excelMcp tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "excelMcp execute": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "507b8b97-1fed-4f13-b59f-a8fe781066d7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "14cd46de9452ff579ca695a81754f75003e237ebead11343faa98a10fa9054ce"
  },
  "id": "YF8ufMh2WIBWgE7s",
  "tags": []
}